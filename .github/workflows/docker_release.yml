name: Docker Release_Automation

on:
  push:
    tags:
      - 'd*.*.*'
  workflow_dispatch:

permissions: # added using https://github.com/step-security/secure-repo
  contents: read

jobs:

  docker_build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/docker
    steps:
      - if: ${{ ! inputs.main_build_only }}
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - if: ${{ ! inputs.main_build_only }}
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
      - if: ${{ ! inputs.main_build_only }}
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - if: ${{ ! inputs.main_build_only }}
        run: |
          docker buildx build -t cpswan/sshnpdc -f sshnpd/tools/Dockerfile.package \
          --platform ${{ matrix.platform }} -o type=tar,dest=bins.tar .
          mkdir tarballs
          tar -xvf bins.tar -C tarballs
      - if: ${{ ! inputs.main_build_only }}
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: ${{ matrix.output-name }}-${{github.ref_name}}-${{github.run_number}}-${{github.run_attempt}}
          path: ./packages/c/tarballs/${{ matrix.output-name }}.tgz

  github-release:
    name: >-
      Upload artifacts and generate checksums for provenance
    needs: [main_build, other_build]
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
      attestations: write
    steps:
    - name: Download all the tarballs
      uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
      with:
        path: tarballs/
#    - name: Generate SBOMs
#      run: |
#        syft scan file:./packages/dart/sshnoports/pubspec.lock \
#          -o 'spdx-json=tarballs/dart_sshnoports_sbom.spdx.json' \
#          -o 'cyclonedx-json=tarballs/dart_sshnoports_sbom.cyclonedx.json'
    - name: Move packages for signing
      run: |
        cd tarballs
        echo "Before:"
        ls -latrR *
        mv */*.tgz .
        mv */*.zip .
        rm -Rf -- */
        echo "After:"
        ls -latrR *
    - name: Generate SHA256 checksums
      working-directory: tarballs
      run: sha256sum * > checksums.txt
    - name: Upload artifacts to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' tarballs/**
        --repo '${{ github.repository }}'
    - id: hash
      name: Pass artifact hashes for SLSA provenance
      working-directory: tarballs
      run: |
        echo "hashes=$(cat checksums.txt | base64 -w0)" >> "$GITHUB_OUTPUT"
    - uses: actions/attest-build-provenance@49df96e17e918a15956db358890b08e61c704919 # v1.2.0
      with:
        subject-path: 'tarballs/**'

  provenance:
    needs: [github-release]
    permissions:
      actions: read # Needed for detection of GitHub Actions environment.
      id-token: write # Needed for provenance signing and ID
      contents: write # Needed for release uploads
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0 # 5a775b367a56d5bd118a224a811bba288150a563
    with:
      base64-subjects: "${{ needs.github-release.outputs.hashes }}"
      upload-assets: true
